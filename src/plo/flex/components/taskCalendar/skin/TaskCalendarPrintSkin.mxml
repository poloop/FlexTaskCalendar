<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:mx="library://ns.adobe.com/flex/halo"
			 xmlns:taskCalendar="plo.flex.components.taskCalendar.*"
			 xmlns:ns="library://ns.adobe.com/flex/mx"
			 xmlns:slider="plo.flex.components.slider.*"
			 >
	<fx:Metadata>
		<![CDATA[ 
		[HostComponent("plo.flex.components.taskCalendar.PrintTaskCalendar")]
		]]>
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import flash.events.NativeDragEvent;
			
			import mx.core.ScrollPolicy;
			
			import plo.flex.components.taskCalendar.TaskCalendar;
			
			import spark.events.RendererExistenceEvent;
			
			override protected function initializationComplete():void
			{
				super.initializationComplete();
				dataDisplay.scroller.setStyle("horizontalScrollPolicy", ScrollPolicy.OFF);
				dataDisplay.scroller.setStyle("verticalScrollPolicy", ScrollPolicy.OFF);
			}
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				if (getStyle("borderVisible") == true)
				{
					border.visible=true;
					
					background.left=background.top=background.right=background.bottom=1;
				}
				else
				{
					border.visible=false;
					background.left=background.top=background.right=background.bottom=0;
				}
				
				borderStroke.color=getStyle("borderColor");
				borderStroke.alpha=getStyle("borderAlpha");
				
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				trace(dataDisplay.scroller.verticalScrollBar.measuredWidth);
				backgroundTimeDisplay.width = (hostComponent.width - 1) - dataDisplay.scroller.verticalScrollBar.measuredWidth;
			}
			
			/**
			 *  @private
			 */
			override public function styleChanged(styleProp:String):void
			{
				var allStyles:Boolean=!styleProp || styleProp == "styleName";
				
				super.styleChanged(styleProp);
				
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<fx:Component id="timeDisplayItem">
			<taskCalendar:TimeDisplayItem skinClass="plo.flex.components.taskCalendar.skin.TimeDisplayItemSkin"/>
		</fx:Component>
	</fx:Declarations>
	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled"/>
	</s:states>
	
	<!-- border -->
	<!--- @private -->
	<s:Rect id="border"
			left="0"
			right="0"
			top="0"
			bottom="0">
		<s:stroke>
			<!--- @private -->
			<s:SolidColorStroke id="borderStroke"
								weight="1"/>
		</s:stroke>
	</s:Rect>
	
	<!-- fill -->
	<!--- Defines the appearance of the TextArea component's background. -->
	<s:Rect id="background"
			alpha=".2"
			left="1"
			right="1"
			top="1"
			bottom="1">
		<s:fill>
			<!--- @private Defines the background fill color. -->
			<s:SolidColor id="bgFill"
						  color="0xFFFFFF"/>
		</s:fill>
	</s:Rect>
	<s:Rect id="backgroundTimeDisplay"
			fill="{new SolidColor(0x04badf, .2)}"
			width="{dataDisplay.width - 15}"
			height="56"/>
	<s:VGroup gap="0"
			  width="{hostComponent.width}"
			  height="{hostComponent.height}">
		<s:VGroup id="timeDisplay"
				  gap="0"
				  width="{dataDisplay.width - 15}"
				  height="56"
				  mask="{maskDisplay.displayObject}">
			<s:Group id="topTimeDisplay"
					 width="100%"
					 height="28"
					 />
			<s:Line stroke="{new SolidColorStroke(0x000000, 1, 1, true)}" width="100%"/>
			<s:Group id="bottomTimeDisplay"
					 width="100%"
					 height="28"
					 />
		</s:VGroup>
		<s:Group height="100%">
			<s:Group id="graphicsDisplay"
					 width="{dataDisplay.width}"
					 height="{dataDisplay.height}"
					 />
			<s:Group id="vDropIndicatorDisplay"
					 width="{dataDisplay.width}"
					 height="100%"
					 />
			<s:List id="dataDisplay"
					contentBackgroundAlpha="0"
					itemRenderer="plo.flex.components.taskCalendar.skin.TaskPrintItemRenderer"
					dataProvider="@{hostComponent.taskCollection}"
					width="{hostComponent.width - 1}"
					height="100%">
			</s:List>
		</s:Group>
		<ns:Spacer height="20"/>
	</s:VGroup>
	
	<slider:MultiDataHSlider id="datesSlider"
							 width="{dataDisplay.width - 15}"
							 bottom="0"
							 interDataThumbEnabled="true"
							 skinClass="plo.flex.components.slider.skin.MultiDataHSliderSkin"/>
	
	<s:Rect id="maskDisplay"
			left="1"
			right="16"
			top="1"
			bottom="1"
			fill="{new SolidColor(0x0000FF)}"/>
	
</s:SparkSkin>
